name: CompileUbuntu

on:
  [push, pull_request]

jobs:
  ubuntu_build:
    name: Build MeshLab (Ubuntu)
    runs-on: ubuntu-16.04 #in order to deploy, need to use oldest supported version
    
    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: Installing dependencies
      run: |
       #sudo apt install -y qt5-default qttools5-dev-tools qtscript5-dev libqt5xmlpatterns5-dev mesa-common-dev libglu1-mesa-dev lib3ds-dev libglew-dev libeigen3-dev libopenctm-dev libgmp-dev libqhull-dev
       sh install/linux/linux_setup_env_ubuntu.sh
    - name: Setting env variables
      id: envs
      shell: bash
      run: |
        echo  ::set-output name=date::"$(date +%Y.%m)"
    - name: Compiling MeshLab
      run: |
        sh install/linux/linux_build.sh
    - name: Creating Meshlab Portable ZIP
      run : |
        sh install/linux/linux_appimage.sh
        mv distrib/*.AppImage .
    - name: Uploading Meshlab Portable
      uses: actions/upload-artifact@v1
      with:
        name: meshlab_linux_portable
        path: distrib/
    - name: Uploading Meshlab AppImage
      uses: actions/upload-artifact@v1
      with:
        name: meshlab_linux_appimage
        path: MeshLab${{steps.envs.outputs.date}}-linux.AppImage
         

  ubuntu_build_cmake:
    name: Build MeshLab (Ubuntu - CMake)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: Installing dependencies
      run: |
       sudo apt update
       sudo apt install -y qt5-default qtscript5-dev libqt5xmlpatterns5-dev mesa-common-dev libglu1-mesa-dev lib3ds-dev libglew-dev libeigen3-dev libopenctm-dev libgmp-dev libqhull-dev cmake ninja-build 
    - name: Configuring
      run: |
        cmake src/ -G Ninja
    - name: Compiling meshlab
      run: ninja -C .

